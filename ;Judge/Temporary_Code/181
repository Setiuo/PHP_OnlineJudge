#include <cstdio>
#include <math.h>
#include <algorithm>

using namespace std;

int belong[1000010];
int allNum[1000010];
int maxNum[100000];

int main()
{
	int n;
	scanf("%d", &n);

	int block = (int)sqrt(n);

	for (int i = 1; i <= n; i++)
	{
		scanf("%d", &allNum[i]);

		belong[i] = (i - 1) / block + 1;
		maxNum[belong[i]] = max(maxNum[belong[i]], allNum[i]);
	}

	int l, r;
	while (~scanf("%d%d", &l, &r))
	{
		int lBelong = belong[l];
		int rBelong = belong[r];

		int ans = 0;

		if (lBelong == rBelong || rBelong == lBelong + 1)
		{
			for (int i = l; i <= r; i++)
			{
				ans = max(allNum[i], ans);
			}
		}
		else
		{
			for (int i = l; i <= lBelong * block; i++)
			{
				ans = max(allNum[i], ans);
			}

			for (int i = (rBelong - 1) * block + 1; i <= r; i++)
			{
				ans = max(allNum[i], ans);
			}

			for (int i = lBelong + 1; i <= rBelong - 1; i++)
			{
				ans = max(maxNum[i], ans);
			}
		}

		printf("%d\n", ans);
	}

	return 0;
}